{"ast":null,"code":"/*!\n * Theia Sticky Sidebar v1.4.0\n * https://github.com/WeCodePixels/theia-sticky-sidebar\n *\n * Glues your website's sidebars, making them permanently visible while scrolling.\n *\n * Copyright 2013-2016 WeCodePixels and other contributors\n * Released under the MIT license\n */\nimport jQuery from 'jquery';\n\n(function ($) {\n  $.fn.theiaStickySidebar = function (options) {\n    var defaults = {\n      'containerSelector': '',\n      'additionalMarginTop': 0,\n      'additionalMarginBottom': 0,\n      'updateSidebarHeight': true,\n      'minWidth': 0,\n      'disableOnResponsiveLayouts': true,\n      'sidebarBehavior': 'modern'\n    };\n    options = $.extend(defaults, options); // Validate options\n\n    options.additionalMarginTop = parseInt(options.additionalMarginTop) || 0;\n    options.additionalMarginBottom = parseInt(options.additionalMarginBottom) || 0;\n    tryInitOrHookIntoEvents(options, this); // Try doing init, otherwise hook into window.resize and document.scroll and try again then.\n\n    function tryInitOrHookIntoEvents(options, $that) {\n      var success = tryInit(options, $that);\n\n      if (!success) {\n        console.log('TST: Body width smaller than options.minWidth. Init is delayed.');\n        $(document).scroll(function (options, $that) {\n          return function (evt) {\n            var success = tryInit(options, $that);\n\n            if (success) {\n              $(this).unbind(evt);\n            }\n          };\n        }(options, $that));\n        $(window).resize(function (options, $that) {\n          return function (evt) {\n            var success = tryInit(options, $that);\n\n            if (success) {\n              $(this).unbind(evt);\n            }\n          };\n        }(options, $that));\n      }\n    } // Try doing init if proper conditions are met.\n\n\n    function tryInit(options, $that) {\n      if (options.initialized === true) {\n        return true;\n      }\n\n      if ($('body').width() < options.minWidth) {\n        return false;\n      }\n\n      init(options, $that);\n      return true;\n    } // Init the sticky sidebar(s).\n\n\n    function init(options, $that) {\n      options.initialized = true; // Add CSS\n\n      $('head').append($('<style>.theiaStickySidebar:after {content: \"\"; display: table; clear: both;}</style>'));\n      $that.each(function () {\n        var o = {};\n        o.sidebar = $(this); // Save options\n\n        o.options = options || {}; // Get container\n\n        o.container = $(o.options.containerSelector);\n\n        if (o.container.size() == 0) {\n          o.container = o.sidebar.parent();\n        } // Create sticky sidebar\n\n\n        o.sidebar.parents().css('-webkit-transform', 'none'); // Fix for WebKit bug - https://code.google.com/p/chromium/issues/detail?id=20574\n\n        o.sidebar.css({\n          'position': 'relative',\n          'overflow': 'visible',\n          // The \"box-sizing\" must be set to \"content-box\" because we set a fixed height to this element when the sticky sidebar has a fixed position.\n          '-webkit-box-sizing': 'border-box',\n          '-moz-box-sizing': 'border-box',\n          'box-sizing': 'border-box'\n        }); // Get the sticky sidebar element. If none has been found, then create one.\n\n        o.stickySidebar = o.sidebar.find('.theiaStickySidebar');\n\n        if (o.stickySidebar.length == 0) {\n          o.sidebar.find('script').remove(); // Remove <script> tags, otherwise they will be run again on the next line.\n\n          o.stickySidebar = $('<div>').addClass('theiaStickySidebar').append(o.sidebar.children());\n          o.sidebar.append(o.stickySidebar);\n        } // Get existing top and bottom margins and paddings\n\n\n        o.marginTop = parseInt(o.sidebar.css('margin-top'));\n        o.marginBottom = parseInt(o.sidebar.css('margin-bottom'));\n        o.paddingTop = parseInt(o.sidebar.css('padding-top'));\n        o.paddingBottom = parseInt(o.sidebar.css('padding-bottom')); // Add a temporary padding rule to check for collapsable margins.\n\n        var collapsedTopHeight = o.stickySidebar.offset().top;\n        var collapsedBottomHeight = o.stickySidebar.outerHeight();\n        o.stickySidebar.css('padding-top', 1);\n        o.stickySidebar.css('padding-bottom', 1);\n        collapsedTopHeight -= o.stickySidebar.offset().top;\n        collapsedBottomHeight = o.stickySidebar.outerHeight() - collapsedBottomHeight - collapsedTopHeight;\n\n        if (collapsedTopHeight == 0) {\n          o.stickySidebar.css('padding-top', 0);\n          o.stickySidebarPaddingTop = 0;\n        } else {\n          o.stickySidebarPaddingTop = 1;\n        }\n\n        if (collapsedBottomHeight == 0) {\n          o.stickySidebar.css('padding-bottom', 0);\n          o.stickySidebarPaddingBottom = 0;\n        } else {\n          o.stickySidebarPaddingBottom = 1;\n        } // We use this to know whether the user is scrolling up or down.\n\n\n        o.previousScrollTop = null; // Scroll top (value) when the sidebar has fixed position.\n\n        o.fixedScrollTop = 0; // Set sidebar to default values.\n\n        resetSidebar();\n\n        o.onScroll = function (o) {\n          // Stop if the sidebar isn't visible.\n          if (!o.stickySidebar.is(\":visible\")) {\n            return;\n          } // Stop if the window is too small.\n\n\n          if ($('body').width() < o.options.minWidth) {\n            resetSidebar();\n            return;\n          } // Stop if the sidebar width is larger than the container width (e.g. the theme is responsive and the sidebar is now below the content)\n\n\n          if (o.options.disableOnResponsiveLayouts) {\n            var sidebarWidth = o.sidebar.outerWidth(o.sidebar.css('float') == 'none');\n\n            if (sidebarWidth + 50 > o.container.width()) {\n              resetSidebar();\n              return;\n            }\n          }\n\n          var scrollTop = $(document).scrollTop();\n          var position = 'static'; // If the user has scrolled down enough for the sidebar to be clipped at the top, then we can consider changing its position.\n\n          if (scrollTop >= o.container.offset().top + (o.paddingTop + o.marginTop - o.options.additionalMarginTop)) {\n            // The top and bottom offsets, used in various calculations.\n            var offsetTop = o.paddingTop + o.marginTop + options.additionalMarginTop;\n            var offsetBottom = o.paddingBottom + o.marginBottom + options.additionalMarginBottom; // All top and bottom positions are relative to the window, not to the parent elemnts.\n\n            var containerTop = o.container.offset().top;\n            var containerBottom = o.container.offset().top + getClearedHeight(o.container); // The top and bottom offsets relative to the window screen top (zero) and bottom (window height).\n\n            var windowOffsetTop = 0 + options.additionalMarginTop;\n            var windowOffsetBottom;\n            var sidebarSmallerThanWindow = o.stickySidebar.outerHeight() + offsetTop + offsetBottom < $(window).height();\n\n            if (sidebarSmallerThanWindow) {\n              windowOffsetBottom = windowOffsetTop + o.stickySidebar.outerHeight();\n            } else {\n              windowOffsetBottom = $(window).height() - o.marginBottom - o.paddingBottom - options.additionalMarginBottom;\n            }\n\n            var staticLimitTop = containerTop - scrollTop + o.paddingTop + o.marginTop;\n            var staticLimitBottom = containerBottom - scrollTop - o.paddingBottom - o.marginBottom;\n            var top = o.stickySidebar.offset().top - scrollTop;\n            var scrollTopDiff = o.previousScrollTop - scrollTop; // If the sidebar position is fixed, then it won't move up or down by itself. So, we manually adjust the top coordinate.\n\n            if (o.stickySidebar.css('position') == 'fixed') {\n              if (o.options.sidebarBehavior == 'modern') {\n                top += scrollTopDiff;\n              }\n            }\n\n            if (o.options.sidebarBehavior == 'stick-to-top') {\n              top = options.additionalMarginTop;\n            }\n\n            if (o.options.sidebarBehavior == 'stick-to-bottom') {\n              top = windowOffsetBottom - o.stickySidebar.outerHeight();\n            }\n\n            if (scrollTopDiff > 0) {\n              // If the user is scrolling up.\n              top = Math.min(top, windowOffsetTop);\n            } else {\n              // If the user is scrolling down.\n              top = Math.max(top, windowOffsetBottom - o.stickySidebar.outerHeight());\n            }\n\n            top = Math.max(top, staticLimitTop);\n            top = Math.min(top, staticLimitBottom - o.stickySidebar.outerHeight()); // If the sidebar is the same height as the container, we won't use fixed positioning.\n\n            var sidebarSameHeightAsContainer = o.container.height() == o.stickySidebar.outerHeight();\n\n            if (!sidebarSameHeightAsContainer && top == windowOffsetTop) {\n              position = 'fixed';\n            } else if (!sidebarSameHeightAsContainer && top == windowOffsetBottom - o.stickySidebar.outerHeight()) {\n              position = 'fixed';\n            } else if (scrollTop + top - o.sidebar.offset().top - o.paddingTop <= options.additionalMarginTop) {\n              // Stuck to the top of the page. No special behavior.\n              position = 'static';\n            } else {\n              // Stuck to the bottom of the page.\n              position = 'absolute';\n            }\n          }\n          /*\n           * Performance notice: It's OK to set these CSS values at each resize/scroll, even if they don't change.\n           * It's way slower to first check if the values have changed.\n           */\n\n\n          if (position == 'fixed') {\n            o.stickySidebar.css({\n              'position': 'fixed',\n              'width': o.sidebar.width(),\n              'top': top,\n              'left': o.sidebar.offset().left + parseInt(o.sidebar.css('padding-left'))\n            });\n          } else if (position == 'absolute') {\n            var css = {};\n\n            if (o.stickySidebar.css('position') != 'absolute') {\n              css.position = 'absolute';\n              css.top = scrollTop + top - o.sidebar.offset().top - o.stickySidebarPaddingTop - o.stickySidebarPaddingBottom;\n            }\n\n            css.width = o.sidebar.width();\n            css.left = '';\n            o.stickySidebar.css(css);\n          } else if (position == 'static') {\n            resetSidebar();\n          }\n\n          if (position != 'static') {\n            if (o.options.updateSidebarHeight == true) {\n              o.sidebar.css({\n                'min-height': o.stickySidebar.outerHeight() + o.stickySidebar.offset().top - o.sidebar.offset().top + o.paddingBottom\n              });\n            }\n          }\n\n          o.previousScrollTop = scrollTop;\n        }; // Initialize the sidebar's position.\n\n\n        o.onScroll(o); // Recalculate the sidebar's position on every scroll and resize.\n\n        $(document).scroll(function (o) {\n          return function () {\n            o.onScroll(o);\n          };\n        }(o));\n        $(window).resize(function (o) {\n          return function () {\n            o.stickySidebar.css({\n              'position': 'static'\n            });\n            o.onScroll(o);\n          };\n        }(o)); // Reset the sidebar to its default state\n\n        function resetSidebar() {\n          o.fixedScrollTop = 0;\n          o.sidebar.css({\n            'min-height': '1px'\n          });\n          o.stickySidebar.css({\n            'position': 'static',\n            'width': ''\n          });\n        } // Get the height of a div as if its floated children were cleared. Note that this function fails if the floats are more than one level deep.\n\n\n        function getClearedHeight(e) {\n          var height = e.height();\n          e.children().each(function () {\n            height = Math.max(height, $(this).height());\n          });\n          return height;\n        }\n      });\n    }\n  };\n})(jQuery);","map":{"version":3,"sources":["/Users/thanh.nguyen/Documents/ThanhNguyen/React/web/application/src/access/theia-sticky-sidebar.js"],"names":["jQuery","$","fn","theiaStickySidebar","options","defaults","extend","additionalMarginTop","parseInt","additionalMarginBottom","tryInitOrHookIntoEvents","$that","success","tryInit","console","log","document","scroll","evt","unbind","window","resize","initialized","width","minWidth","init","append","each","o","sidebar","container","containerSelector","size","parent","parents","css","stickySidebar","find","length","remove","addClass","children","marginTop","marginBottom","paddingTop","paddingBottom","collapsedTopHeight","offset","top","collapsedBottomHeight","outerHeight","stickySidebarPaddingTop","stickySidebarPaddingBottom","previousScrollTop","fixedScrollTop","resetSidebar","onScroll","is","disableOnResponsiveLayouts","sidebarWidth","outerWidth","scrollTop","position","offsetTop","offsetBottom","containerTop","containerBottom","getClearedHeight","windowOffsetTop","windowOffsetBottom","sidebarSmallerThanWindow","height","staticLimitTop","staticLimitBottom","scrollTopDiff","sidebarBehavior","Math","min","max","sidebarSameHeightAsContainer","left","updateSidebarHeight","e"],"mappings":"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","sourcesContent":["/*!\n * Theia Sticky Sidebar v1.4.0\n * https://github.com/WeCodePixels/theia-sticky-sidebar\n *\n * Glues your website's sidebars, making them permanently visible while scrolling.\n *\n * Copyright 2013-2016 WeCodePixels and other contributors\n * Released under the MIT license\n */\nimport jQuery from 'jquery';\n\n(function ($) {\n    $.fn.theiaStickySidebar = function (options) {\n        var defaults = {\n            'containerSelector': '',\n            'additionalMarginTop': 0,\n            'additionalMarginBottom': 0,\n            'updateSidebarHeight': true,\n            'minWidth': 0,\n            'disableOnResponsiveLayouts': true,\n            'sidebarBehavior': 'modern'\n        };\n        options = $.extend(defaults, options);\n\n        // Validate options\n        options.additionalMarginTop = parseInt(options.additionalMarginTop) || 0;\n        options.additionalMarginBottom = parseInt(options.additionalMarginBottom) || 0;\n\n        tryInitOrHookIntoEvents(options, this);\n\n        // Try doing init, otherwise hook into window.resize and document.scroll and try again then.\n        function tryInitOrHookIntoEvents(options, $that) {\n            var success = tryInit(options, $that);\n\n            if (!success) {\n                console.log('TST: Body width smaller than options.minWidth. Init is delayed.');\n\n                $(document).scroll(function (options, $that) {\n                    return function (evt) {\n                        var success = tryInit(options, $that);\n\n                        if (success) {\n                            $(this).unbind(evt);\n                        }\n                    };\n                }(options, $that));\n                $(window).resize(function (options, $that) {\n                    return function (evt) {\n                        var success = tryInit(options, $that);\n\n                        if (success) {\n                            $(this).unbind(evt);\n                        }\n                    };\n                }(options, $that))\n            }\n        }\n\n        // Try doing init if proper conditions are met.\n        function tryInit(options, $that) {\n            if (options.initialized === true) {\n                return true;\n            }\n\n            if ($('body').width() < options.minWidth) {\n                return false;\n            }\n\n            init(options, $that);\n\n            return true;\n        }\n\n        // Init the sticky sidebar(s).\n        function init(options, $that) {\n            options.initialized = true;\n\n            // Add CSS\n            $('head').append($('<style>.theiaStickySidebar:after {content: \"\"; display: table; clear: both;}</style>'));\n\n            $that.each(function () {\n                var o = {};\n\n                o.sidebar = $(this);\n\n                // Save options\n                o.options = options || {};\n\n                // Get container\n                o.container = $(o.options.containerSelector);\n                if (o.container.size() == 0) {\n                    o.container = o.sidebar.parent();\n                }\n\n                // Create sticky sidebar\n                o.sidebar.parents().css('-webkit-transform', 'none'); // Fix for WebKit bug - https://code.google.com/p/chromium/issues/detail?id=20574\n                o.sidebar.css({\n                    'position': 'relative',\n                    'overflow': 'visible',\n                    // The \"box-sizing\" must be set to \"content-box\" because we set a fixed height to this element when the sticky sidebar has a fixed position.\n                    '-webkit-box-sizing': 'border-box',\n                    '-moz-box-sizing': 'border-box',\n                    'box-sizing': 'border-box'\n                });\n\n                // Get the sticky sidebar element. If none has been found, then create one.\n                o.stickySidebar = o.sidebar.find('.theiaStickySidebar');\n                if (o.stickySidebar.length == 0) {\n                    o.sidebar.find('script').remove(); // Remove <script> tags, otherwise they will be run again on the next line.\n                    o.stickySidebar = $('<div>').addClass('theiaStickySidebar').append(o.sidebar.children());\n                    o.sidebar.append(o.stickySidebar);\n                }\n\n                // Get existing top and bottom margins and paddings\n                o.marginTop = parseInt(o.sidebar.css('margin-top'));\n                o.marginBottom = parseInt(o.sidebar.css('margin-bottom'));\n                o.paddingTop = parseInt(o.sidebar.css('padding-top'));\n                o.paddingBottom = parseInt(o.sidebar.css('padding-bottom'));\n\n                // Add a temporary padding rule to check for collapsable margins.\n                var collapsedTopHeight = o.stickySidebar.offset().top;\n                var collapsedBottomHeight = o.stickySidebar.outerHeight();\n                o.stickySidebar.css('padding-top', 1);\n                o.stickySidebar.css('padding-bottom', 1);\n                collapsedTopHeight -= o.stickySidebar.offset().top;\n                collapsedBottomHeight = o.stickySidebar.outerHeight() - collapsedBottomHeight - collapsedTopHeight;\n                if (collapsedTopHeight == 0) {\n                    o.stickySidebar.css('padding-top', 0);\n                    o.stickySidebarPaddingTop = 0;\n                }\n                else {\n                    o.stickySidebarPaddingTop = 1;\n                }\n\n                if (collapsedBottomHeight == 0) {\n                    o.stickySidebar.css('padding-bottom', 0);\n                    o.stickySidebarPaddingBottom = 0;\n                }\n                else {\n                    o.stickySidebarPaddingBottom = 1;\n                }\n\n                // We use this to know whether the user is scrolling up or down.\n                o.previousScrollTop = null;\n\n                // Scroll top (value) when the sidebar has fixed position.\n                o.fixedScrollTop = 0;\n\n                // Set sidebar to default values.\n                resetSidebar();\n\n                o.onScroll = function (o) {\n                    // Stop if the sidebar isn't visible.\n                    if (!o.stickySidebar.is(\":visible\")) {\n                        return;\n                    }\n\n                    // Stop if the window is too small.\n                    if ($('body').width() < o.options.minWidth) {\n                        resetSidebar();\n                        return;\n                    }\n\n                    // Stop if the sidebar width is larger than the container width (e.g. the theme is responsive and the sidebar is now below the content)\n                    if (o.options.disableOnResponsiveLayouts) {\n                        var sidebarWidth = o.sidebar.outerWidth(o.sidebar.css('float') == 'none');\n\n                        if (sidebarWidth + 50 > o.container.width()) {\n                            resetSidebar();\n                            return;\n                        }\n                    }\n\n                    var scrollTop = $(document).scrollTop();\n                    var position = 'static';\n\n                    // If the user has scrolled down enough for the sidebar to be clipped at the top, then we can consider changing its position.\n                    if (scrollTop >= o.container.offset().top + (o.paddingTop + o.marginTop - o.options.additionalMarginTop)) {\n                        // The top and bottom offsets, used in various calculations.\n                        var offsetTop = o.paddingTop + o.marginTop + options.additionalMarginTop;\n                        var offsetBottom = o.paddingBottom + o.marginBottom + options.additionalMarginBottom;\n\n                        // All top and bottom positions are relative to the window, not to the parent elemnts.\n                        var containerTop = o.container.offset().top;\n                        var containerBottom = o.container.offset().top + getClearedHeight(o.container);\n\n                        // The top and bottom offsets relative to the window screen top (zero) and bottom (window height).\n                        var windowOffsetTop = 0 + options.additionalMarginTop;\n                        var windowOffsetBottom;\n\n                        var sidebarSmallerThanWindow = (o.stickySidebar.outerHeight() + offsetTop + offsetBottom) < $(window).height();\n                        if (sidebarSmallerThanWindow) {\n                            windowOffsetBottom = windowOffsetTop + o.stickySidebar.outerHeight();\n                        }\n                        else {\n                            windowOffsetBottom = $(window).height() - o.marginBottom - o.paddingBottom - options.additionalMarginBottom;\n                        }\n\n                        var staticLimitTop = containerTop - scrollTop + o.paddingTop + o.marginTop;\n                        var staticLimitBottom = containerBottom - scrollTop - o.paddingBottom - o.marginBottom;\n\n                        var top = o.stickySidebar.offset().top - scrollTop;\n                        var scrollTopDiff = o.previousScrollTop - scrollTop;\n\n                        // If the sidebar position is fixed, then it won't move up or down by itself. So, we manually adjust the top coordinate.\n                        if (o.stickySidebar.css('position') == 'fixed') {\n                            if (o.options.sidebarBehavior == 'modern') {\n                                top += scrollTopDiff;\n                            }\n                        }\n\n                        if (o.options.sidebarBehavior == 'stick-to-top') {\n                            top = options.additionalMarginTop;\n                        }\n\n                        if (o.options.sidebarBehavior == 'stick-to-bottom') {\n                            top = windowOffsetBottom - o.stickySidebar.outerHeight();\n                        }\n\n                        if (scrollTopDiff > 0) { // If the user is scrolling up.\n                            top = Math.min(top, windowOffsetTop);\n                        }\n                        else { // If the user is scrolling down.\n                            top = Math.max(top, windowOffsetBottom - o.stickySidebar.outerHeight());\n                        }\n\n                        top = Math.max(top, staticLimitTop);\n\n                        top = Math.min(top, staticLimitBottom - o.stickySidebar.outerHeight());\n\n                        // If the sidebar is the same height as the container, we won't use fixed positioning.\n                        var sidebarSameHeightAsContainer = o.container.height() == o.stickySidebar.outerHeight();\n\n                        if (!sidebarSameHeightAsContainer && top == windowOffsetTop) {\n                            position = 'fixed';\n                        }\n                        else if (!sidebarSameHeightAsContainer && top == windowOffsetBottom - o.stickySidebar.outerHeight()) {\n                            position = 'fixed';\n                        }\n                        else if (scrollTop + top - o.sidebar.offset().top - o.paddingTop <= options.additionalMarginTop) {\n                            // Stuck to the top of the page. No special behavior.\n                            position = 'static';\n                        }\n                        else {\n                            // Stuck to the bottom of the page.\n                            position = 'absolute';\n                        }\n                    }\n\n                    /*\n                     * Performance notice: It's OK to set these CSS values at each resize/scroll, even if they don't change.\n                     * It's way slower to first check if the values have changed.\n                     */\n                    if (position == 'fixed') {\n                        o.stickySidebar.css({\n                            'position': 'fixed',\n                            'width': o.sidebar.width(),\n                            'top': top,\n                            'left': o.sidebar.offset().left + parseInt(o.sidebar.css('padding-left'))\n                        });\n                    }\n                    else if (position == 'absolute') {\n                        var css = {};\n\n                        if (o.stickySidebar.css('position') != 'absolute') {\n                            css.position = 'absolute';\n                            css.top = scrollTop + top - o.sidebar.offset().top - o.stickySidebarPaddingTop - o.stickySidebarPaddingBottom;\n                        }\n\n                        css.width = o.sidebar.width();\n                        css.left = '';\n\n                        o.stickySidebar.css(css);\n                    }\n                    else if (position == 'static') {\n                        resetSidebar();\n                    }\n\n                    if (position != 'static') {\n                        if (o.options.updateSidebarHeight == true) {\n                            o.sidebar.css({\n                                'min-height': o.stickySidebar.outerHeight() + o.stickySidebar.offset().top - o.sidebar.offset().top + o.paddingBottom\n                            });\n                        }\n                    }\n\n                    o.previousScrollTop = scrollTop;\n                };\n\n                // Initialize the sidebar's position.\n                o.onScroll(o);\n\n                // Recalculate the sidebar's position on every scroll and resize.\n                $(document).scroll(function (o) {\n                    return function () {\n                        o.onScroll(o);\n                    };\n                }(o));\n                $(window).resize(function (o) {\n                    return function () {\n                        o.stickySidebar.css({'position': 'static'});\n                        o.onScroll(o);\n                    };\n                }(o));\n\n                // Reset the sidebar to its default state\n                function resetSidebar() {\n                    o.fixedScrollTop = 0;\n                    o.sidebar.css({\n                        'min-height': '1px'\n                    });\n                    o.stickySidebar.css({\n                        'position': 'static',\n                        'width': ''\n                    });\n                }\n\n                // Get the height of a div as if its floated children were cleared. Note that this function fails if the floats are more than one level deep.\n                function getClearedHeight(e) {\n                    var height = e.height();\n\n                    e.children().each(function () {\n                        height = Math.max(height, $(this).height());\n                    });\n\n                    return height;\n                }\n            });\n        }\n    }\n})(jQuery);\n"]},"metadata":{},"sourceType":"module"}