{"ast":null,"code":"/*!\n * Theia Sticky Sidebar v1.7.0\n * https://github.com/WeCodePixels/theia-sticky-sidebar\n *\n * Glues your website's sidebars, making them permanently visible while scrolling.\n *\n * Copyright 2013-2016 WeCodePixels and other contributors\n * Released under the MIT license\n */\n(function ($) {\n  $.fn.theiaStickySidebar = function (options) {\n    var defaults = {\n      'containerSelector': '',\n      'additionalMarginTop': 0,\n      'additionalMarginBottom': 0,\n      'updateSidebarHeight': true,\n      'minWidth': 0,\n      'disableOnResponsiveLayouts': true,\n      'sidebarBehavior': 'modern',\n      'defaultPosition': 'relative',\n      'namespace': 'TSS'\n    };\n    options = $.extend(defaults, options); // Validate options\n\n    options.additionalMarginTop = parseInt(options.additionalMarginTop) || 0;\n    options.additionalMarginBottom = parseInt(options.additionalMarginBottom) || 0;\n    tryInitOrHookIntoEvents(options, this); // Try doing init, otherwise hook into window.resize and document.scroll and try again then.\n\n    function tryInitOrHookIntoEvents(options, $that) {\n      var success = tryInit(options, $that);\n\n      if (!success) {\n        console.log('TSS: Body width smaller than options.minWidth. Init is delayed.');\n        $(document).on('scroll.' + options.namespace, function (options, $that) {\n          return function (evt) {\n            var success = tryInit(options, $that);\n\n            if (success) {\n              $(this).unbind(evt);\n            }\n          };\n        }(options, $that));\n        $(window).on('resize.' + options.namespace, function (options, $that) {\n          return function (evt) {\n            var success = tryInit(options, $that);\n\n            if (success) {\n              $(this).unbind(evt);\n            }\n          };\n        }(options, $that));\n      }\n    } // Try doing init if proper conditions are met.\n\n\n    function tryInit(options, $that) {\n      if (options.initialized === true) {\n        return true;\n      }\n\n      if ($('body').width() < options.minWidth) {\n        return false;\n      }\n\n      init(options, $that);\n      return true;\n    } // Init the sticky sidebar(s).\n\n\n    function init(options, $that) {\n      options.initialized = true; // Add CSS\n\n      var existingStylesheet = $('#theia-sticky-sidebar-stylesheet-' + options.namespace);\n\n      if (existingStylesheet.length === 0) {\n        $('head').append($('<style id=\"theia-sticky-sidebar-stylesheet-' + options.namespace + '\">.theiaStickySidebar:after {content: \"\"; display: table; clear: both;}</style>'));\n      }\n\n      $that.each(function () {\n        var o = {};\n        o.sidebar = $(this); // Save options\n\n        o.options = options || {}; // Get container\n\n        o.container = $(o.options.containerSelector);\n\n        if (o.container.length == 0) {\n          o.container = o.sidebar.parent();\n        } // Create sticky sidebar\n\n\n        o.sidebar.parents().css('-webkit-transform', 'none'); // Fix for WebKit bug - https://code.google.com/p/chromium/issues/detail?id=20574\n\n        o.sidebar.css({\n          'position': o.options.defaultPosition,\n          'overflow': 'visible',\n          // The \"box-sizing\" must be set to \"content-box\" because we set a fixed height to this element when the sticky sidebar has a fixed position.\n          '-webkit-box-sizing': 'border-box',\n          '-moz-box-sizing': 'border-box',\n          'box-sizing': 'border-box'\n        }); // Get the sticky sidebar element. If none has been found, then create one.\n\n        o.stickySidebar = o.sidebar.find('.theiaStickySidebar');\n\n        if (o.stickySidebar.length == 0) {\n          // Remove <script> tags, otherwise they will be run again when added to the stickySidebar.\n          var javaScriptMIMETypes = /(?:text|application)\\/(?:x-)?(?:javascript|ecmascript)/i;\n          o.sidebar.find('script').filter(function (index, script) {\n            return script.type.length === 0 || script.type.match(javaScriptMIMETypes);\n          }).remove();\n          o.stickySidebar = $('<div>').addClass('theiaStickySidebar').append(o.sidebar.children());\n          o.sidebar.append(o.stickySidebar);\n        } // Get existing top and bottom margins and paddings\n\n\n        o.marginBottom = parseInt(o.sidebar.css('margin-bottom'));\n        o.paddingTop = parseInt(o.sidebar.css('padding-top'));\n        o.paddingBottom = parseInt(o.sidebar.css('padding-bottom')); // Add a temporary padding rule to check for collapsable margins.\n\n        var collapsedTopHeight = o.stickySidebar.offset().top;\n        var collapsedBottomHeight = o.stickySidebar.outerHeight();\n        o.stickySidebar.css('padding-top', 1);\n        o.stickySidebar.css('padding-bottom', 1);\n        collapsedTopHeight -= o.stickySidebar.offset().top;\n        collapsedBottomHeight = o.stickySidebar.outerHeight() - collapsedBottomHeight - collapsedTopHeight;\n\n        if (collapsedTopHeight == 0) {\n          o.stickySidebar.css('padding-top', 0);\n          o.stickySidebarPaddingTop = 0;\n        } else {\n          o.stickySidebarPaddingTop = 1;\n        }\n\n        if (collapsedBottomHeight == 0) {\n          o.stickySidebar.css('padding-bottom', 0);\n          o.stickySidebarPaddingBottom = 0;\n        } else {\n          o.stickySidebarPaddingBottom = 1;\n        } // We use this to know whether the user is scrolling up or down.\n\n\n        o.previousScrollTop = null; // Scroll top (value) when the sidebar has fixed position.\n\n        o.fixedScrollTop = 0; // Set sidebar to default values.\n\n        resetSidebar();\n\n        o.onScroll = function (o) {\n          // Stop if the sidebar isn't visible.\n          if (!o.stickySidebar.is(\":visible\")) {\n            return;\n          } // Stop if the window is too small.\n\n\n          if ($('body').width() < o.options.minWidth) {\n            resetSidebar();\n            return;\n          } // Stop if the sidebar width is larger than the container width (e.g. the theme is responsive and the sidebar is now below the content)\n\n\n          if (o.options.disableOnResponsiveLayouts) {\n            var sidebarWidth = o.sidebar.outerWidth(o.sidebar.css('float') == 'none');\n\n            if (sidebarWidth + 50 > o.container.width()) {\n              resetSidebar();\n              return;\n            }\n          }\n\n          var scrollTop = $(document).scrollTop();\n          var position = 'static'; // If the user has scrolled down enough for the sidebar to be clipped at the top, then we can consider changing its position.\n\n          if (scrollTop >= o.sidebar.offset().top + (o.paddingTop - o.options.additionalMarginTop)) {\n            // The top and bottom offsets, used in various calculations.\n            var offsetTop = o.paddingTop + options.additionalMarginTop;\n            var offsetBottom = o.paddingBottom + o.marginBottom + options.additionalMarginBottom; // All top and bottom positions are relative to the window, not to the parent elemnts.\n\n            var containerTop = o.sidebar.offset().top;\n            var containerBottom = o.sidebar.offset().top + getClearedHeight(o.container); // The top and bottom offsets relative to the window screen top (zero) and bottom (window height).\n\n            var windowOffsetTop = 0 + options.additionalMarginTop;\n            var windowOffsetBottom;\n            var sidebarSmallerThanWindow = o.stickySidebar.outerHeight() + offsetTop + offsetBottom < $(window).height();\n\n            if (sidebarSmallerThanWindow) {\n              windowOffsetBottom = windowOffsetTop + o.stickySidebar.outerHeight();\n            } else {\n              windowOffsetBottom = $(window).height() - o.marginBottom - o.paddingBottom - options.additionalMarginBottom;\n            }\n\n            var staticLimitTop = containerTop - scrollTop + o.paddingTop;\n            var staticLimitBottom = containerBottom - scrollTop - o.paddingBottom - o.marginBottom;\n            var top = o.stickySidebar.offset().top - scrollTop;\n            var scrollTopDiff = o.previousScrollTop - scrollTop; // If the sidebar position is fixed, then it won't move up or down by itself. So, we manually adjust the top coordinate.\n\n            if (o.stickySidebar.css('position') == 'fixed') {\n              if (o.options.sidebarBehavior == 'modern') {\n                top += scrollTopDiff;\n              }\n            }\n\n            if (o.options.sidebarBehavior == 'stick-to-top') {\n              top = options.additionalMarginTop;\n            }\n\n            if (o.options.sidebarBehavior == 'stick-to-bottom') {\n              top = windowOffsetBottom - o.stickySidebar.outerHeight();\n            }\n\n            if (scrollTopDiff > 0) {\n              // If the user is scrolling up.\n              top = Math.min(top, windowOffsetTop);\n            } else {\n              // If the user is scrolling down.\n              top = Math.max(top, windowOffsetBottom - o.stickySidebar.outerHeight());\n            }\n\n            top = Math.max(top, staticLimitTop);\n            top = Math.min(top, staticLimitBottom - o.stickySidebar.outerHeight()); // If the sidebar is the same height as the container, we won't use fixed positioning.\n\n            var sidebarSameHeightAsContainer = o.container.height() == o.stickySidebar.outerHeight();\n\n            if (!sidebarSameHeightAsContainer && top == windowOffsetTop) {\n              position = 'fixed';\n            } else if (!sidebarSameHeightAsContainer && top == windowOffsetBottom - o.stickySidebar.outerHeight()) {\n              position = 'fixed';\n            } else if (scrollTop + top - o.sidebar.offset().top - o.paddingTop <= options.additionalMarginTop) {\n              // Stuck to the top of the page. No special behavior.\n              position = 'static';\n            } else {\n              // Stuck to the bottom of the page.\n              position = 'absolute';\n            }\n          }\n          /*\n           * Performance notice: It's OK to set these CSS values at each resize/scroll, even if they don't change.\n           * It's way slower to first check if the values have changed.\n           */\n\n\n          if (position == 'fixed') {\n            var scrollLeft = $(document).scrollLeft();\n            o.stickySidebar.css({\n              'position': 'fixed',\n              'width': getWidthForObject(o.stickySidebar) + 'px',\n              'transform': 'translateY(' + top + 'px)',\n              'left': o.sidebar.offset().left + parseInt(o.sidebar.css('padding-left')) - scrollLeft + 'px',\n              'top': '0px'\n            });\n          } else if (position == 'absolute') {\n            var css = {};\n\n            if (o.stickySidebar.css('position') != 'absolute') {\n              css.position = 'absolute';\n              css.transform = 'translateY(' + (scrollTop + top - o.sidebar.offset().top - o.stickySidebarPaddingTop - o.stickySidebarPaddingBottom) + 'px)';\n              css.top = '0px';\n            }\n\n            css.width = getWidthForObject(o.stickySidebar) + 'px';\n            css.left = '';\n            o.stickySidebar.css(css);\n          } else if (position == 'static') {\n            resetSidebar();\n          }\n\n          if (position != 'static') {\n            if (o.options.updateSidebarHeight == true) {\n              o.sidebar.css({\n                'min-height': o.stickySidebar.outerHeight() + o.stickySidebar.offset().top - o.sidebar.offset().top + o.paddingBottom\n              });\n            }\n          }\n\n          o.previousScrollTop = scrollTop;\n        }; // Initialize the sidebar's position.\n\n\n        o.onScroll(o); // Recalculate the sidebar's position on every scroll and resize.\n\n        $(document).on('scroll.' + o.options.namespace, function (o) {\n          return function () {\n            o.onScroll(o);\n          };\n        }(o));\n        $(window).on('resize.' + o.options.namespace, function (o) {\n          return function () {\n            o.stickySidebar.css({\n              'position': 'static'\n            });\n            o.onScroll(o);\n          };\n        }(o)); // Recalculate the sidebar's position every time the sidebar changes its size.\n\n        if (typeof ResizeSensor !== 'undefined') {\n          new ResizeSensor(o.stickySidebar[0], function (o) {\n            return function () {\n              o.onScroll(o);\n            };\n          }(o));\n        } // Reset the sidebar to its default state\n\n\n        function resetSidebar() {\n          o.fixedScrollTop = 0;\n          o.sidebar.css({\n            'min-height': '1px'\n          });\n          o.stickySidebar.css({\n            'position': 'static',\n            'width': '',\n            'transform': 'none'\n          });\n        } // Get the height of a div as if its floated children were cleared. Note that this function fails if the floats are more than one level deep.\n\n\n        function getClearedHeight(e) {\n          var height = e.height();\n          e.children().each(function () {\n            height = Math.max(height, $(this).height());\n          });\n          return height;\n        }\n      });\n    }\n\n    function getWidthForObject(object) {\n      var width;\n\n      try {\n        width = object[0].getBoundingClientRect().width;\n      } catch (err) {}\n\n      if (typeof width === \"undefined\") {\n        width = object.width();\n      }\n\n      return width;\n    }\n\n    return this;\n  };\n})(jQuery);","map":{"version":3,"sources":["/Users/thanh.nguyen/Documents/ThanhNguyen/React/web/application/node_modules/theia-sticky-sidebar/dist/maps/theia-sticky-sidebar.js"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Theia Sticky Sidebar v1.7.0\n * https://github.com/WeCodePixels/theia-sticky-sidebar\n *\n * Glues your website's sidebars, making them permanently visible while scrolling.\n *\n * Copyright 2013-2016 WeCodePixels and other contributors\n * Released under the MIT license\n */\n\n(function ($) {\n    $.fn.theiaStickySidebar = function (options) {\n        var defaults = {\n            'containerSelector': '',\n            'additionalMarginTop': 0,\n            'additionalMarginBottom': 0,\n            'updateSidebarHeight': true,\n            'minWidth': 0,\n            'disableOnResponsiveLayouts': true,\n            'sidebarBehavior': 'modern',\n            'defaultPosition': 'relative',\n            'namespace': 'TSS'\n        };\n        options = $.extend(defaults, options);\n\n        // Validate options\n        options.additionalMarginTop = parseInt(options.additionalMarginTop) || 0;\n        options.additionalMarginBottom = parseInt(options.additionalMarginBottom) || 0;\n\n        tryInitOrHookIntoEvents(options, this);\n\n        // Try doing init, otherwise hook into window.resize and document.scroll and try again then.\n        function tryInitOrHookIntoEvents(options, $that) {\n            var success = tryInit(options, $that);\n\n            if (!success) {\n                console.log('TSS: Body width smaller than options.minWidth. Init is delayed.');\n\n                $(document).on('scroll.' + options.namespace, function (options, $that) {\n                    return function (evt) {\n                        var success = tryInit(options, $that);\n\n                        if (success) {\n                            $(this).unbind(evt);\n                        }\n                    };\n                }(options, $that));\n                $(window).on('resize.' + options.namespace, function (options, $that) {\n                    return function (evt) {\n                        var success = tryInit(options, $that);\n\n                        if (success) {\n                            $(this).unbind(evt);\n                        }\n                    };\n                }(options, $that))\n            }\n        }\n\n        // Try doing init if proper conditions are met.\n        function tryInit(options, $that) {\n            if (options.initialized === true) {\n                return true;\n            }\n\n            if ($('body').width() < options.minWidth) {\n                return false;\n            }\n\n            init(options, $that);\n\n            return true;\n        }\n\n        // Init the sticky sidebar(s).\n        function init(options, $that) {\n            options.initialized = true;\n\n            // Add CSS\n            var existingStylesheet = $('#theia-sticky-sidebar-stylesheet-' + options.namespace);\n            if (existingStylesheet.length === 0) {\n                $('head').append($('<style id=\"theia-sticky-sidebar-stylesheet-' + options.namespace + '\">.theiaStickySidebar:after {content: \"\"; display: table; clear: both;}</style>'));\n            }\n\n            $that.each(function () {\n                var o = {};\n\n                o.sidebar = $(this);\n\n                // Save options\n                o.options = options || {};\n\n                // Get container\n                o.container = $(o.options.containerSelector);\n                if (o.container.length == 0) {\n                    o.container = o.sidebar.parent();\n                }\n\n                // Create sticky sidebar\n                o.sidebar.parents().css('-webkit-transform', 'none'); // Fix for WebKit bug - https://code.google.com/p/chromium/issues/detail?id=20574\n                o.sidebar.css({\n                    'position': o.options.defaultPosition,\n                    'overflow': 'visible',\n                    // The \"box-sizing\" must be set to \"content-box\" because we set a fixed height to this element when the sticky sidebar has a fixed position.\n                    '-webkit-box-sizing': 'border-box',\n                    '-moz-box-sizing': 'border-box',\n                    'box-sizing': 'border-box'\n                });\n\n                // Get the sticky sidebar element. If none has been found, then create one.\n                o.stickySidebar = o.sidebar.find('.theiaStickySidebar');\n                if (o.stickySidebar.length == 0) {\n                    // Remove <script> tags, otherwise they will be run again when added to the stickySidebar.\n                    var javaScriptMIMETypes = /(?:text|application)\\/(?:x-)?(?:javascript|ecmascript)/i;\n                    o.sidebar.find('script').filter(function (index, script) {\n                        return script.type.length === 0 || script.type.match(javaScriptMIMETypes);\n                    }).remove();\n\n                    o.stickySidebar = $('<div>').addClass('theiaStickySidebar').append(o.sidebar.children());\n                    o.sidebar.append(o.stickySidebar);\n                }\n\n                // Get existing top and bottom margins and paddings\n                o.marginBottom = parseInt(o.sidebar.css('margin-bottom'));\n                o.paddingTop = parseInt(o.sidebar.css('padding-top'));\n                o.paddingBottom = parseInt(o.sidebar.css('padding-bottom'));\n\n                // Add a temporary padding rule to check for collapsable margins.\n                var collapsedTopHeight = o.stickySidebar.offset().top;\n                var collapsedBottomHeight = o.stickySidebar.outerHeight();\n                o.stickySidebar.css('padding-top', 1);\n                o.stickySidebar.css('padding-bottom', 1);\n                collapsedTopHeight -= o.stickySidebar.offset().top;\n                collapsedBottomHeight = o.stickySidebar.outerHeight() - collapsedBottomHeight - collapsedTopHeight;\n                if (collapsedTopHeight == 0) {\n                    o.stickySidebar.css('padding-top', 0);\n                    o.stickySidebarPaddingTop = 0;\n                }\n                else {\n                    o.stickySidebarPaddingTop = 1;\n                }\n\n                if (collapsedBottomHeight == 0) {\n                    o.stickySidebar.css('padding-bottom', 0);\n                    o.stickySidebarPaddingBottom = 0;\n                }\n                else {\n                    o.stickySidebarPaddingBottom = 1;\n                }\n\n                // We use this to know whether the user is scrolling up or down.\n                o.previousScrollTop = null;\n\n                // Scroll top (value) when the sidebar has fixed position.\n                o.fixedScrollTop = 0;\n\n                // Set sidebar to default values.\n                resetSidebar();\n\n                o.onScroll = function (o) {\n                    // Stop if the sidebar isn't visible.\n                    if (!o.stickySidebar.is(\":visible\")) {\n                        return;\n                    }\n\n                    // Stop if the window is too small.\n                    if ($('body').width() < o.options.minWidth) {\n                        resetSidebar();\n                        return;\n                    }\n\n                    // Stop if the sidebar width is larger than the container width (e.g. the theme is responsive and the sidebar is now below the content)\n                    if (o.options.disableOnResponsiveLayouts) {\n                        var sidebarWidth = o.sidebar.outerWidth(o.sidebar.css('float') == 'none');\n\n                        if (sidebarWidth + 50 > o.container.width()) {\n                            resetSidebar();\n                            return;\n                        }\n                    }\n\n                    var scrollTop = $(document).scrollTop();\n                    var position = 'static';\n\n                    // If the user has scrolled down enough for the sidebar to be clipped at the top, then we can consider changing its position.\n                    if (scrollTop >= o.sidebar.offset().top + (o.paddingTop - o.options.additionalMarginTop)) {\n                        // The top and bottom offsets, used in various calculations.\n                        var offsetTop = o.paddingTop + options.additionalMarginTop;\n                        var offsetBottom = o.paddingBottom + o.marginBottom + options.additionalMarginBottom;\n\n                        // All top and bottom positions are relative to the window, not to the parent elemnts.\n                        var containerTop = o.sidebar.offset().top;\n                        var containerBottom = o.sidebar.offset().top + getClearedHeight(o.container);\n\n                        // The top and bottom offsets relative to the window screen top (zero) and bottom (window height).\n                        var windowOffsetTop = 0 + options.additionalMarginTop;\n                        var windowOffsetBottom;\n\n                        var sidebarSmallerThanWindow = (o.stickySidebar.outerHeight() + offsetTop + offsetBottom) < $(window).height();\n                        if (sidebarSmallerThanWindow) {\n                            windowOffsetBottom = windowOffsetTop + o.stickySidebar.outerHeight();\n                        }\n                        else {\n                            windowOffsetBottom = $(window).height() - o.marginBottom - o.paddingBottom - options.additionalMarginBottom;\n                        }\n\n                        var staticLimitTop = containerTop - scrollTop + o.paddingTop;\n                        var staticLimitBottom = containerBottom - scrollTop - o.paddingBottom - o.marginBottom;\n\n                        var top = o.stickySidebar.offset().top - scrollTop;\n                        var scrollTopDiff = o.previousScrollTop - scrollTop;\n\n                        // If the sidebar position is fixed, then it won't move up or down by itself. So, we manually adjust the top coordinate.\n                        if (o.stickySidebar.css('position') == 'fixed') {\n                            if (o.options.sidebarBehavior == 'modern') {\n                                top += scrollTopDiff;\n                            }\n                        }\n\n                        if (o.options.sidebarBehavior == 'stick-to-top') {\n                            top = options.additionalMarginTop;\n                        }\n\n                        if (o.options.sidebarBehavior == 'stick-to-bottom') {\n                            top = windowOffsetBottom - o.stickySidebar.outerHeight();\n                        }\n\n                        if (scrollTopDiff > 0) { // If the user is scrolling up.\n                            top = Math.min(top, windowOffsetTop);\n                        }\n                        else { // If the user is scrolling down.\n                            top = Math.max(top, windowOffsetBottom - o.stickySidebar.outerHeight());\n                        }\n\n                        top = Math.max(top, staticLimitTop);\n\n                        top = Math.min(top, staticLimitBottom - o.stickySidebar.outerHeight());\n\n                        // If the sidebar is the same height as the container, we won't use fixed positioning.\n                        var sidebarSameHeightAsContainer = o.container.height() == o.stickySidebar.outerHeight();\n\n                        if (!sidebarSameHeightAsContainer && top == windowOffsetTop) {\n                            position = 'fixed';\n                        }\n                        else if (!sidebarSameHeightAsContainer && top == windowOffsetBottom - o.stickySidebar.outerHeight()) {\n                            position = 'fixed';\n                        }\n                        else if (scrollTop + top - o.sidebar.offset().top - o.paddingTop <= options.additionalMarginTop) {\n                            // Stuck to the top of the page. No special behavior.\n                            position = 'static';\n                        }\n                        else {\n                            // Stuck to the bottom of the page.\n                            position = 'absolute';\n                        }\n                    }\n\n                    /*\n                     * Performance notice: It's OK to set these CSS values at each resize/scroll, even if they don't change.\n                     * It's way slower to first check if the values have changed.\n                     */\n                    if (position == 'fixed') {\n                        var scrollLeft = $(document).scrollLeft();\n\n                        o.stickySidebar.css({\n                            'position': 'fixed',\n                            'width': getWidthForObject(o.stickySidebar) + 'px',\n                            'transform': 'translateY(' + top + 'px)',\n                            'left': (o.sidebar.offset().left + parseInt(o.sidebar.css('padding-left')) - scrollLeft) + 'px',\n                            'top': '0px'\n                        });\n                    }\n                    else if (position == 'absolute') {\n                        var css = {};\n\n                        if (o.stickySidebar.css('position') != 'absolute') {\n                            css.position = 'absolute';\n                            css.transform = 'translateY(' + (scrollTop + top - o.sidebar.offset().top - o.stickySidebarPaddingTop - o.stickySidebarPaddingBottom) + 'px)';\n                            css.top = '0px';\n                        }\n\n                        css.width = getWidthForObject(o.stickySidebar) + 'px';\n                        css.left = '';\n\n                        o.stickySidebar.css(css);\n                    }\n                    else if (position == 'static') {\n                        resetSidebar();\n                    }\n\n                    if (position != 'static') {\n                        if (o.options.updateSidebarHeight == true) {\n                            o.sidebar.css({\n                                'min-height': o.stickySidebar.outerHeight() + o.stickySidebar.offset().top - o.sidebar.offset().top + o.paddingBottom\n                            });\n                        }\n                    }\n\n                    o.previousScrollTop = scrollTop;\n                };\n\n                // Initialize the sidebar's position.\n                o.onScroll(o);\n\n                // Recalculate the sidebar's position on every scroll and resize.\n                $(document).on('scroll.' + o.options.namespace, function (o) {\n                    return function () {\n                        o.onScroll(o);\n                    };\n                }(o));\n                $(window).on('resize.' + o.options.namespace, function (o) {\n                    return function () {\n                        o.stickySidebar.css({'position': 'static'});\n                        o.onScroll(o);\n                    };\n                }(o));\n\n                // Recalculate the sidebar's position every time the sidebar changes its size.\n                if (typeof ResizeSensor !== 'undefined') {\n                    new ResizeSensor(o.stickySidebar[0], function (o) {\n                        return function () {\n                            o.onScroll(o);\n                        };\n                    }(o));\n                }\n\n                // Reset the sidebar to its default state\n                function resetSidebar() {\n                    o.fixedScrollTop = 0;\n                    o.sidebar.css({\n                        'min-height': '1px'\n                    });\n                    o.stickySidebar.css({\n                        'position': 'static',\n                        'width': '',\n                        'transform': 'none'\n                    });\n                }\n\n                // Get the height of a div as if its floated children were cleared. Note that this function fails if the floats are more than one level deep.\n                function getClearedHeight(e) {\n                    var height = e.height();\n\n                    e.children().each(function () {\n                        height = Math.max(height, $(this).height());\n                    });\n\n                    return height;\n                }\n            });\n        }\n\n        function getWidthForObject(object) {\n            var width;\n\n            try {\n                width = object[0].getBoundingClientRect().width;\n            }\n            catch (err) {\n            }\n\n            if (typeof width === \"undefined\") {\n                width = object.width();\n            }\n\n            return width;\n        }\n\n        return this;\n    }\n})(jQuery);\n"]},"metadata":{},"sourceType":"script"}